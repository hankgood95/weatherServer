<?xml version="1.0" encoding="UTF-8"?>
<!-- 로그들을 설정하는 설정 파일이다. -->
<configuration>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender"> <!-- 콘솔에 출력되는 형식을 지정 -->
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{36} - %msg%n</Pattern>
			<!-- - %d{yyyyMMdd HH:mm:ss.SSS} : 시간, [%thread] : 로그를 찍은 Thread, %-5level: 로그레벨, %logger{0}:%line: 로그를 출력시킨 java 파일명와 line 
			 %msg%n : 메시지와 줄바꿈-->
		</layout>
	</appender>
	
	 <appender name="ERROR_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

	    <file>./logs/error.log</file>
	    <filter class="ch.qos.logback.classic.filter.LevelFilter">
	      <level>ERROR</level>
	      <onMatch>ACCEPT</onMatch>
	      <onMismatch>DENY</onMismatch>
	    </filter>
	    <encoder>
	      <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern>
	    </encoder>
	    <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
	      <fileNamePattern>./was-logs/error.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern>
	      <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
	        <maxFileSize>100MB</maxFileSize>
	      </timeBasedFileNamingAndTriggeringPolicy>
	      <maxHistory>30</maxHistory>
	    </rollingPolicy>
	  </appender>
	  
	   <appender name="INFO_LOG" class="ch.qos.logback.core.rolling.RollingFileAppender">

		   <file>./logs/info.log</file> <!-- 파일을 저장할 경로를 정한다 -->
		   <filter class="ch.qos.logback.classic.filter.LevelFilter">
		     <level>INFO</level>
		     <onMatch>ACCEPT</onMatch> <!-- 해당 레벨만 기록한다. -->
		     <onMismatch>DENY</onMismatch> <!-- 다른 수준의 레벨은 기록하지 않는다.(상위 레벨도 기록 안함), 상위 수준의 레벨에 대한 기록을 원하면 ACCEPT 로 하면 기록된다. -->
		   </filter> <!-- 레벨별 필터링이 필요없을 경우 filter class 관련된 부분을 삭제하면 됨-->
		   <encoder>
		     <pattern>[%d{yyyy-MM-dd HH:mm:ss}:%-3relative][%thread] %-5level %logger{35} - %msg%n</pattern> <!-- 해당 패턴 네이밍으로 현재 로그가 기록됨 -->
		   </encoder>
		   <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
		     <fileNamePattern>./was-logs/info.%d{yyyy-MM-dd}.%i.log.gz</fileNamePattern> <!-- 해당 패턴 네이밍으로 이전 파일이 기록됨 -->
		     <timeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
		       <maxFileSize>15MB</maxFileSize> <!-- 한 파일의 최대 용량 -->
		     </timeBasedFileNamingAndTriggeringPolicy>
		     <maxHistory>2</maxHistory> <!-- 한 파일의 최대 저장 기한 -->
		   </rollingPolicy>
		 </appender>
		 
		<root level="INFO"> <!-- INFO 단계에서의 로그는 STDOUT의 규칙을 따른다 -->
		    <appender-ref ref="STDOUT"/>
		</root>
		 
		 <logger name="LogController" additivity="false"> <!-- 콘솔에 출력된 LogController 에 대해서 아래 작업을 실행한다.-->
		   <level value = "DEBUG" /> <!-- DEBUG 레벨 이상에서만 실행한다. -->
		   <appender-ref ref="INFO_LOG" />
		   <appender-ref ref="ERROR_LOG" />
		 </logger>
		 
</configuration>
